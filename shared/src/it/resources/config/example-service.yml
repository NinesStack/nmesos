## Config to deploy a simple java app to Mesos using Singularity
## This configuration should be located at github.com/Nitro/detonator/example-service/

nmesos_version: '0.0.1' ## Min nmesos required to execute this config

common:

  resources:
    instances: 1 # Number of instances to deploy
    cpus: 0.1
    memoryMb: 128

  container:

    image: hubspot/singularity-test-service # Docker repo/image without the tag

    ports:
      - 8080 # Exposed port by the container (Mesos will auto assign a external port)

    volumes:
      - /tmp/foo:/tmp/foo  #  (HOST:CONTAINER) with default rw or (HOST:CONTAINER:rw)

    labels:
      ServiceName: "$name$"
      ## Sindecar config
      HealthCheck: "HttpGet"
      HealthCheckArgs: "http://{{ host }}:{{ tcp 8080 }}/hello"

    env_vars:
      NEW_RELIC_LICENSE_KEY: "xxxxx"
      JAVA_OPTS: >
        -Xms1024m
        -Xmx1024m
        -Xss2M
        -XX:+UseConcMarkSweepGC
        -XX:+CMSClassUnloadingEnabled
        -Dconfig.file=conf/app.conf
        -Dlogger.resource=papertrail.xml
        -Dcom.sun.management.jmxremote
        -Dcom.sun.management.jmxremote=true
        -Dcom.sun.management.jmxremote.port=9990
        -Dcom.sun.management.jmxremote.rmi.port=9990
        -Djava.rmi.server.hostname={{ inventory_hostname }}
        -Djava.net.preferIPv4Stack=true
        -Dcom.sun.management.jmxremote.authenticate=false
        -Dcom.sun.management.jmxremote.ssl=false"

    extraDockerConf:
      network: HOST
      dockerParameters:
        cap-add: NET_ADMIN

  singularity:
    deployInstanceCountPerStep: 1   # Number of instances deployed at once.
    autoAdvanceDeploySteps: true    # false to have Canary deployments.
    deployStepWaitTimeMs: 1000      # Time to wait between deployments
    healthcheckUri: "/hello"        # Used for singularity to determine if a deploy was success

environments:
  dev:
    mesos:
      url: "http://test"
    singularity:
      url: "http://192.168.99.100:7099/singularity"
